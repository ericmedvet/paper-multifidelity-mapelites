$qF = f.mapValue(key = "avg.dist"; format = "%5.3f"; of = ea.f.behaviorQuality())

$bestQ = ea.f.cached( 
  of = f.composition(of = f.iApply(of = ea.f.solution(of = ea.f.best()); iF = ea.f.qualityFunction(of = ea.f.problem())); then = $qF)
) 
$bestValQ = $bestQ

$qdScoreT = 0.2
$valQdScoreT = $qdScoreT

$cArchive = ea.f.computedArchive(
  of = ea.f.all();
  descriptors = [$desc1; $desc2]
)

$qdScore = ea.f.cached(of = f.as(name = "qd.score"; of = f.sum(format = "%4.2f"; of = f.iEach(
  of = ea.f.archiveContents(of = $cArchive);
  iMapF = f.iComposition(
    of = ea.f.qualityFunction(of = ea.f.problem());
    before = ea.f.solution();
    then = f.clip(range = m.range(min = 0; max = $qdScoreT); of = f.mathOp(op = subtract; args = [
      f.mathConst(v = $qdScoreT);
      $qF
    ]))
  )
))))

$valQdScore = $qdScore

